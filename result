-------------------------------------4---------------
using System;
using System.Collections.Generic;
using System.Linq;

namespace DataProcessing
{
    // مرحله پردازش داده
    public interface IDataRule
    {
        int? Apply(int input);
    }

    // --- قوانین نمونه ---
    public class EvenNumberRule : IDataRule
    {
        public int? Apply(int input)
        {
            if (input % 2 == 0)
                return input * 2;

            return input + 3;
        }
    }

    public class GreaterThanFiveFilter : IDataRule
    {
        public int? Apply(int input)
        {
            return input > 5 ? input : null; // null = حذف از جریان
        }
    }

    // پردازشگر زنجیره‌ای
    public class DataProcessor
    {
        private readonly IEnumerable<IDataRule> _rules;

        public DataProcessor(IEnumerable<IDataRule> rules)
        {
            _rules = rules;
        }

        public List<int> Process(IEnumerable<int> inputData)
        {
            var results = new List<int>();

            foreach (var item in inputData)
            {
                int? currentValue = item;

                foreach (var rule in _rules)
                {
                    if (currentValue == null) break;
                    currentValue = rule.Apply(currentValue.Value);
                }

                if (currentValue != null)
                {
                    results.Add(currentValue.Value);
                }
            }

            return results;
        }
    }

    // --- نقطه شروع برنامه ---
    class Program
    {
        static void Main(string[] args)
        {
            var rules = new List<IDataRule>
            {
                new EvenNumberRule(),
                new GreaterThanFiveFilter()
            };

            var processor = new DataProcessor(rules);

            var inputData = new List<int> { 1, 2, 3, 4, 5 };
            var processedData = processor.Process(inputData);

            foreach (var val in processedData)
            {
                Console.WriteLine(val);
            }
        }
    }
}

